<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BankDataSet5" targetNamespace="http://tempuri.org/BankDataSet5.xsd" xmlns:mstns="http://tempuri.org/BankDataSet5.xsd" xmlns="http://tempuri.org/BankDataSet5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LogInConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LogInConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PersonnelLogin.Properties.Settings.GlobalReference.Default.LogInConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BankDataTableAdapter" GeneratorDataComponentClassName="BankDataTableAdapter" Name="BankData" UserDataComponentName="BankDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LogInConnectionString (Settings)" DbObjectName="LogIn.dbo.BankData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BankData] WHERE (([BankCode] = @Original_BankCode) AND ((@IsNull_BankName = 1 AND [BankName] IS NULL) OR ([BankName] = @Original_BankName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BankCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BankCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BankName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BankName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BankName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BankData] ([BankCode], [BankName]) VALUES (@BankCode, @BankName);
SELECT BankCode, BankName FROM BankData WHERE (BankCode = @BankCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BankCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BankCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BankName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BankCode, BankName FROM dbo.BankData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BankData] SET [BankCode] = @BankCode, [BankName] = @BankName WHERE (([BankCode] = @Original_BankCode) AND ((@IsNull_BankName = 1 AND [BankName] IS NULL) OR ([BankName] = @Original_BankName)));
SELECT BankCode, BankName FROM BankData WHERE (BankCode = @BankCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@BankCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BankCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BankName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_BankCode" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="BankCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_BankName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BankName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BankName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BankCode" DataSetColumn="BankCode" />
              <Mapping SourceColumn="BankName" DataSetColumn="BankName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BankDataSet5" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BankDataSet5" msprop:Generator_UserDSName="BankDataSet5">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BankData" msprop:Generator_TableClassName="BankDataDataTable" msprop:Generator_TableVarName="tableBankData" msprop:Generator_TablePropName="BankData" msprop:Generator_RowDeletingName="BankDataRowDeleting" msprop:Generator_RowChangingName="BankDataRowChanging" msprop:Generator_RowEvHandlerName="BankDataRowChangeEventHandler" msprop:Generator_RowDeletedName="BankDataRowDeleted" msprop:Generator_UserTableName="BankData" msprop:Generator_RowChangedName="BankDataRowChanged" msprop:Generator_RowEvArgName="BankDataRowChangeEvent" msprop:Generator_RowClassName="BankDataRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BankCode" msprop:Generator_ColumnVarNameInTable="columnBankCode" msprop:Generator_ColumnPropNameInRow="BankCode" msprop:Generator_ColumnPropNameInTable="BankCodeColumn" msprop:Generator_UserColumnName="BankCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BankName" msprop:Generator_ColumnVarNameInTable="columnBankName" msprop:Generator_ColumnPropNameInRow="BankName" msprop:Generator_ColumnPropNameInTable="BankNameColumn" msprop:Generator_UserColumnName="BankName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BankData" />
      <xs:field xpath="mstns:BankCode" />
    </xs:unique>
  </xs:element>
</xs:schema>